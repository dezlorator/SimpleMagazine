@model ProductExtended

<div class="card mt-2">
    <div class="row">
        <div class="col-md-auto">
            <div>
                @if (!String.IsNullOrWhiteSpace(Model.Product.ImageId))
                {
                    <img src="@Url.Action("GetImage", new { id=@Model.Product.ImageId })" alt="Товар" height="400" max-height="400" />
                }
                else
                {
                    <img src="~/images/pets.png" alt="Товар" height="400" max-height="400" />
                }
            </div>
        </div>
        <div class="col-md">
            <div class="card-body">
                <h3 class="card-title">
                    @Model.Product.Name
                    <span class="badge badge-pill badge-primary" style="float:right">
                        <small>@Model.Product.Price.ToString("c", CultureInfo.GetCultureInfo("uk-UA"))</small>
                    </span>
                </h3>
                <form id="@Model.Product.ID" asp-action="AddToCart"
                      asp-controller="Cart" method="post">
                    <input type="hidden" asp-for="Product.ID" name="productId" />
                    <input type="hidden" name="returnUrl"
                           value="@ViewContext.HttpContext.Request.PathAndQuery()" />
                    @if (Client.Models.TokenKeeper.Token != String.Empty)
                    {
                        if (Model.Product.IsInStock)
                        {
                            <button type="submit"
                                    class="btn rounded-pill btn-outline-success pull-right" style="float:right">
                                Добавить в корзину
                            </button>
                        }
                        else
                        {
                            <h6 class="pull-right" style="float:right">Нет в наличии</h6>
                        }
                    }
                </form>
                <h4 class="card-title">
                    Рейтинг
                </h4>
                @if (Model.Comments.Count > 0)
                {
                    <p class="card-text">
                        @Model.Comments.Select(c => c.Rating).Average()
                    </p>
                }
                else
                {
                    <p class="card-text">
                        Пока нет отзывов
                    </p>
                }
                <h4 class="card-title">
                    Категория
                </h4>
                <p class="card-text">
                    @Model.Product.Category.Name
                </p>
                <h4 class="card-title mt-2">
                    Производитель
                </h4>
                <p class="card-text">
                    @Model.Manufacturer
                </p>
                <h4 class="card-title mt-2">
                    Страна производства
                </h4>
                <p class="card-text">
                    @Model.OriginCountry
                </p>
            </div>
        </div>
    </div>
    <div class="card-body mb-2">
        <h4 class="card-title mt-2">
            Краткая информация
        </h4>
        <p class="card-text">
            @Model.Product.Description
        </p>

        <h4 class="card-title">
            Описание
        </h4>
        <p class="card-text">
            @Model.LongDescription
        </p>

        <h4 class="card-title">
            Комментарии
        </h4>
        @foreach (var comment in Model.Comments)
        {
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@comment.UserName</h5>
                    <h6 class="card-subtitle mb-2 text-muted">@comment.Time</h6>
                    <h6 class="card-subtitle mb-2 text-muted">Оценка: @comment.Rating</h6>
                    <p class="card-text">@comment.Message</p>
                    @if (Client.Models.TokenKeeper.UserName == comment.UserName || Client.Models.TokenKeeper.Permissions.CanModerateComments)
                    {
                        <a class="card-link" asp-action="Edit" asp-controller="Comment" asp-route-commentId="@comment.ID" asp-route-returnUrl="@ViewContext.HttpContext.Request.PathAndQuery()">Редактировать</a>
                        <a class="card-link" asp-action="Delete" asp-controller="Comment" asp-route-commentId="@comment.ID" asp-route-returnUrl="@ViewContext.HttpContext.Request.PathAndQuery()">Удалить</a>
                    }
                </div>
            </div>
        }
        @if (Client.Models.TokenKeeper.Token != String.Empty && Client.Models.TokenKeeper.Permissions.CanAddComments)
        {
            <partial name="AddComment" model="new CommentViewModel { ProductId = Model.Product.ID, ReturnUrl =@ViewContext.HttpContext.Request.PathAndQuery() }" />
        }

    </div>
</div>

<div class="text-center mt-4">
    <a class="btn btn-primary btn-transparent rounded-pill" asp-action="List">К списку товаров</a>
</div>
